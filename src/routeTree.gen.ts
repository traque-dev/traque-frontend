/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthResetPasswordRouteImport } from './routes/auth/reset-password'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as AuthForgotPasswordRouteImport } from './routes/auth/forgot-password'
import { Route as AuthenticatedDashboardRouteImport } from './routes/_authenticated/dashboard'
import { Route as AuthenticatedDashboardIndexRouteImport } from './routes/_authenticated/dashboard/index'
import { Route as AuthenticatedSettingsAccountRouteImport } from './routes/_authenticated/settings/account'
import { Route as AuthenticatedDashboardProjectsRouteImport } from './routes/_authenticated/dashboard/projects'
import { Route as AuthenticatedDashboardIssuesRouteImport } from './routes/_authenticated/dashboard/issues'
import { Route as AuthenticatedDashboardIntegrationsRouteImport } from './routes/_authenticated/dashboard/integrations'
import { Route as AuthenticatedDashboardExceptionsRouteImport } from './routes/_authenticated/dashboard/exceptions'
import { Route as AuthenticatedDashboardEventsRouteImport } from './routes/_authenticated/dashboard/events'
import { Route as AuthenticatedDashboardProjectsProjectIdSettingsRouteImport } from './routes/_authenticated/dashboard/projects_/$projectId/settings'

const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthResetPasswordRoute = AuthResetPasswordRouteImport.update({
  id: '/auth/reset-password',
  path: '/auth/reset-password',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthForgotPasswordRoute = AuthForgotPasswordRouteImport.update({
  id: '/auth/forgot-password',
  path: '/auth/forgot-password',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedDashboardRoute = AuthenticatedDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedDashboardIndexRoute =
  AuthenticatedDashboardIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedDashboardRoute,
  } as any)
const AuthenticatedSettingsAccountRoute =
  AuthenticatedSettingsAccountRouteImport.update({
    id: '/settings/account',
    path: '/settings/account',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedDashboardProjectsRoute =
  AuthenticatedDashboardProjectsRouteImport.update({
    id: '/projects',
    path: '/projects',
    getParentRoute: () => AuthenticatedDashboardRoute,
  } as any)
const AuthenticatedDashboardIssuesRoute =
  AuthenticatedDashboardIssuesRouteImport.update({
    id: '/issues',
    path: '/issues',
    getParentRoute: () => AuthenticatedDashboardRoute,
  } as any)
const AuthenticatedDashboardIntegrationsRoute =
  AuthenticatedDashboardIntegrationsRouteImport.update({
    id: '/integrations',
    path: '/integrations',
    getParentRoute: () => AuthenticatedDashboardRoute,
  } as any)
const AuthenticatedDashboardExceptionsRoute =
  AuthenticatedDashboardExceptionsRouteImport.update({
    id: '/exceptions',
    path: '/exceptions',
    getParentRoute: () => AuthenticatedDashboardRoute,
  } as any)
const AuthenticatedDashboardEventsRoute =
  AuthenticatedDashboardEventsRouteImport.update({
    id: '/events',
    path: '/events',
    getParentRoute: () => AuthenticatedDashboardRoute,
  } as any)
const AuthenticatedDashboardProjectsProjectIdSettingsRoute =
  AuthenticatedDashboardProjectsProjectIdSettingsRouteImport.update({
    id: '/projects_/$projectId/settings',
    path: '/projects/$projectId/settings',
    getParentRoute: () => AuthenticatedDashboardRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof AuthenticatedDashboardRouteWithChildren
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/dashboard/events': typeof AuthenticatedDashboardEventsRoute
  '/dashboard/exceptions': typeof AuthenticatedDashboardExceptionsRoute
  '/dashboard/integrations': typeof AuthenticatedDashboardIntegrationsRoute
  '/dashboard/issues': typeof AuthenticatedDashboardIssuesRoute
  '/dashboard/projects': typeof AuthenticatedDashboardProjectsRoute
  '/settings/account': typeof AuthenticatedSettingsAccountRoute
  '/dashboard/': typeof AuthenticatedDashboardIndexRoute
  '/dashboard/projects/$projectId/settings': typeof AuthenticatedDashboardProjectsProjectIdSettingsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/dashboard/events': typeof AuthenticatedDashboardEventsRoute
  '/dashboard/exceptions': typeof AuthenticatedDashboardExceptionsRoute
  '/dashboard/integrations': typeof AuthenticatedDashboardIntegrationsRoute
  '/dashboard/issues': typeof AuthenticatedDashboardIssuesRoute
  '/dashboard/projects': typeof AuthenticatedDashboardProjectsRoute
  '/settings/account': typeof AuthenticatedSettingsAccountRoute
  '/dashboard': typeof AuthenticatedDashboardIndexRoute
  '/dashboard/projects/$projectId/settings': typeof AuthenticatedDashboardProjectsProjectIdSettingsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/_authenticated/dashboard': typeof AuthenticatedDashboardRouteWithChildren
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/_authenticated/dashboard/events': typeof AuthenticatedDashboardEventsRoute
  '/_authenticated/dashboard/exceptions': typeof AuthenticatedDashboardExceptionsRoute
  '/_authenticated/dashboard/integrations': typeof AuthenticatedDashboardIntegrationsRoute
  '/_authenticated/dashboard/issues': typeof AuthenticatedDashboardIssuesRoute
  '/_authenticated/dashboard/projects': typeof AuthenticatedDashboardProjectsRoute
  '/_authenticated/settings/account': typeof AuthenticatedSettingsAccountRoute
  '/_authenticated/dashboard/': typeof AuthenticatedDashboardIndexRoute
  '/_authenticated/dashboard/projects_/$projectId/settings': typeof AuthenticatedDashboardProjectsProjectIdSettingsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/reset-password'
    | '/dashboard/events'
    | '/dashboard/exceptions'
    | '/dashboard/integrations'
    | '/dashboard/issues'
    | '/dashboard/projects'
    | '/settings/account'
    | '/dashboard/'
    | '/dashboard/projects/$projectId/settings'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/reset-password'
    | '/dashboard/events'
    | '/dashboard/exceptions'
    | '/dashboard/integrations'
    | '/dashboard/issues'
    | '/dashboard/projects'
    | '/settings/account'
    | '/dashboard'
    | '/dashboard/projects/$projectId/settings'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/_authenticated/dashboard'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/reset-password'
    | '/_authenticated/dashboard/events'
    | '/_authenticated/dashboard/exceptions'
    | '/_authenticated/dashboard/integrations'
    | '/_authenticated/dashboard/issues'
    | '/_authenticated/dashboard/projects'
    | '/_authenticated/settings/account'
    | '/_authenticated/dashboard/'
    | '/_authenticated/dashboard/projects_/$projectId/settings'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthResetPasswordRoute: typeof AuthResetPasswordRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/reset-password': {
      id: '/auth/reset-password'
      path: '/auth/reset-password'
      fullPath: '/auth/reset-password'
      preLoaderRoute: typeof AuthResetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/forgot-password': {
      id: '/auth/forgot-password'
      path: '/auth/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/dashboard': {
      id: '/_authenticated/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/dashboard/': {
      id: '/_authenticated/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof AuthenticatedDashboardIndexRouteImport
      parentRoute: typeof AuthenticatedDashboardRoute
    }
    '/_authenticated/settings/account': {
      id: '/_authenticated/settings/account'
      path: '/settings/account'
      fullPath: '/settings/account'
      preLoaderRoute: typeof AuthenticatedSettingsAccountRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/dashboard/projects': {
      id: '/_authenticated/dashboard/projects'
      path: '/projects'
      fullPath: '/dashboard/projects'
      preLoaderRoute: typeof AuthenticatedDashboardProjectsRouteImport
      parentRoute: typeof AuthenticatedDashboardRoute
    }
    '/_authenticated/dashboard/issues': {
      id: '/_authenticated/dashboard/issues'
      path: '/issues'
      fullPath: '/dashboard/issues'
      preLoaderRoute: typeof AuthenticatedDashboardIssuesRouteImport
      parentRoute: typeof AuthenticatedDashboardRoute
    }
    '/_authenticated/dashboard/integrations': {
      id: '/_authenticated/dashboard/integrations'
      path: '/integrations'
      fullPath: '/dashboard/integrations'
      preLoaderRoute: typeof AuthenticatedDashboardIntegrationsRouteImport
      parentRoute: typeof AuthenticatedDashboardRoute
    }
    '/_authenticated/dashboard/exceptions': {
      id: '/_authenticated/dashboard/exceptions'
      path: '/exceptions'
      fullPath: '/dashboard/exceptions'
      preLoaderRoute: typeof AuthenticatedDashboardExceptionsRouteImport
      parentRoute: typeof AuthenticatedDashboardRoute
    }
    '/_authenticated/dashboard/events': {
      id: '/_authenticated/dashboard/events'
      path: '/events'
      fullPath: '/dashboard/events'
      preLoaderRoute: typeof AuthenticatedDashboardEventsRouteImport
      parentRoute: typeof AuthenticatedDashboardRoute
    }
    '/_authenticated/dashboard/projects_/$projectId/settings': {
      id: '/_authenticated/dashboard/projects_/$projectId/settings'
      path: '/projects/$projectId/settings'
      fullPath: '/dashboard/projects/$projectId/settings'
      preLoaderRoute: typeof AuthenticatedDashboardProjectsProjectIdSettingsRouteImport
      parentRoute: typeof AuthenticatedDashboardRoute
    }
  }
}

interface AuthenticatedDashboardRouteChildren {
  AuthenticatedDashboardEventsRoute: typeof AuthenticatedDashboardEventsRoute
  AuthenticatedDashboardExceptionsRoute: typeof AuthenticatedDashboardExceptionsRoute
  AuthenticatedDashboardIntegrationsRoute: typeof AuthenticatedDashboardIntegrationsRoute
  AuthenticatedDashboardIssuesRoute: typeof AuthenticatedDashboardIssuesRoute
  AuthenticatedDashboardProjectsRoute: typeof AuthenticatedDashboardProjectsRoute
  AuthenticatedDashboardIndexRoute: typeof AuthenticatedDashboardIndexRoute
  AuthenticatedDashboardProjectsProjectIdSettingsRoute: typeof AuthenticatedDashboardProjectsProjectIdSettingsRoute
}

const AuthenticatedDashboardRouteChildren: AuthenticatedDashboardRouteChildren =
  {
    AuthenticatedDashboardEventsRoute: AuthenticatedDashboardEventsRoute,
    AuthenticatedDashboardExceptionsRoute:
      AuthenticatedDashboardExceptionsRoute,
    AuthenticatedDashboardIntegrationsRoute:
      AuthenticatedDashboardIntegrationsRoute,
    AuthenticatedDashboardIssuesRoute: AuthenticatedDashboardIssuesRoute,
    AuthenticatedDashboardProjectsRoute: AuthenticatedDashboardProjectsRoute,
    AuthenticatedDashboardIndexRoute: AuthenticatedDashboardIndexRoute,
    AuthenticatedDashboardProjectsProjectIdSettingsRoute:
      AuthenticatedDashboardProjectsProjectIdSettingsRoute,
  }

const AuthenticatedDashboardRouteWithChildren =
  AuthenticatedDashboardRoute._addFileChildren(
    AuthenticatedDashboardRouteChildren,
  )

interface AuthenticatedRouteChildren {
  AuthenticatedDashboardRoute: typeof AuthenticatedDashboardRouteWithChildren
  AuthenticatedSettingsAccountRoute: typeof AuthenticatedSettingsAccountRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedDashboardRoute: AuthenticatedDashboardRouteWithChildren,
  AuthenticatedSettingsAccountRoute: AuthenticatedSettingsAccountRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthResetPasswordRoute: AuthResetPasswordRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
