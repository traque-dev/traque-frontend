/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as SettingsAccountRouteImport } from './routes/settings/account'
import { Route as DashboardProjectsRouteImport } from './routes/dashboard/projects'
import { Route as DashboardIssuesRouteImport } from './routes/dashboard/issues'
import { Route as DashboardIntegrationsRouteImport } from './routes/dashboard/integrations'
import { Route as DashboardExceptionsRouteImport } from './routes/dashboard/exceptions'
import { Route as DashboardEventsRouteImport } from './routes/dashboard/events'
import { Route as AuthResetPasswordRouteImport } from './routes/auth/reset-password'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as AuthForgotPasswordRouteImport } from './routes/auth/forgot-password'
import { Route as DashboardProjectsProjectIdSettingsRouteImport } from './routes/dashboard/projects_/$projectId/settings'

const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)
const SettingsAccountRoute = SettingsAccountRouteImport.update({
  id: '/settings/account',
  path: '/settings/account',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardProjectsRoute = DashboardProjectsRouteImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardIssuesRoute = DashboardIssuesRouteImport.update({
  id: '/issues',
  path: '/issues',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardIntegrationsRoute = DashboardIntegrationsRouteImport.update({
  id: '/integrations',
  path: '/integrations',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardExceptionsRoute = DashboardExceptionsRouteImport.update({
  id: '/exceptions',
  path: '/exceptions',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardEventsRoute = DashboardEventsRouteImport.update({
  id: '/events',
  path: '/events',
  getParentRoute: () => DashboardRoute,
} as any)
const AuthResetPasswordRoute = AuthResetPasswordRouteImport.update({
  id: '/auth/reset-password',
  path: '/auth/reset-password',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthForgotPasswordRoute = AuthForgotPasswordRouteImport.update({
  id: '/auth/forgot-password',
  path: '/auth/forgot-password',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardProjectsProjectIdSettingsRoute =
  DashboardProjectsProjectIdSettingsRouteImport.update({
    id: '/projects_/$projectId/settings',
    path: '/projects/$projectId/settings',
    getParentRoute: () => DashboardRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/dashboard/events': typeof DashboardEventsRoute
  '/dashboard/exceptions': typeof DashboardExceptionsRoute
  '/dashboard/integrations': typeof DashboardIntegrationsRoute
  '/dashboard/issues': typeof DashboardIssuesRoute
  '/dashboard/projects': typeof DashboardProjectsRoute
  '/settings/account': typeof SettingsAccountRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/projects/$projectId/settings': typeof DashboardProjectsProjectIdSettingsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/dashboard/events': typeof DashboardEventsRoute
  '/dashboard/exceptions': typeof DashboardExceptionsRoute
  '/dashboard/integrations': typeof DashboardIntegrationsRoute
  '/dashboard/issues': typeof DashboardIssuesRoute
  '/dashboard/projects': typeof DashboardProjectsRoute
  '/settings/account': typeof SettingsAccountRoute
  '/dashboard': typeof DashboardIndexRoute
  '/dashboard/projects/$projectId/settings': typeof DashboardProjectsProjectIdSettingsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/dashboard/events': typeof DashboardEventsRoute
  '/dashboard/exceptions': typeof DashboardExceptionsRoute
  '/dashboard/integrations': typeof DashboardIntegrationsRoute
  '/dashboard/issues': typeof DashboardIssuesRoute
  '/dashboard/projects': typeof DashboardProjectsRoute
  '/settings/account': typeof SettingsAccountRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/projects_/$projectId/settings': typeof DashboardProjectsProjectIdSettingsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/reset-password'
    | '/dashboard/events'
    | '/dashboard/exceptions'
    | '/dashboard/integrations'
    | '/dashboard/issues'
    | '/dashboard/projects'
    | '/settings/account'
    | '/dashboard/'
    | '/dashboard/projects/$projectId/settings'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/reset-password'
    | '/dashboard/events'
    | '/dashboard/exceptions'
    | '/dashboard/integrations'
    | '/dashboard/issues'
    | '/dashboard/projects'
    | '/settings/account'
    | '/dashboard'
    | '/dashboard/projects/$projectId/settings'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/reset-password'
    | '/dashboard/events'
    | '/dashboard/exceptions'
    | '/dashboard/integrations'
    | '/dashboard/issues'
    | '/dashboard/projects'
    | '/settings/account'
    | '/dashboard/'
    | '/dashboard/projects_/$projectId/settings'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRouteWithChildren
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthResetPasswordRoute: typeof AuthResetPasswordRoute
  SettingsAccountRoute: typeof SettingsAccountRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/settings/account': {
      id: '/settings/account'
      path: '/settings/account'
      fullPath: '/settings/account'
      preLoaderRoute: typeof SettingsAccountRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/projects': {
      id: '/dashboard/projects'
      path: '/projects'
      fullPath: '/dashboard/projects'
      preLoaderRoute: typeof DashboardProjectsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/issues': {
      id: '/dashboard/issues'
      path: '/issues'
      fullPath: '/dashboard/issues'
      preLoaderRoute: typeof DashboardIssuesRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/integrations': {
      id: '/dashboard/integrations'
      path: '/integrations'
      fullPath: '/dashboard/integrations'
      preLoaderRoute: typeof DashboardIntegrationsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/exceptions': {
      id: '/dashboard/exceptions'
      path: '/exceptions'
      fullPath: '/dashboard/exceptions'
      preLoaderRoute: typeof DashboardExceptionsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/events': {
      id: '/dashboard/events'
      path: '/events'
      fullPath: '/dashboard/events'
      preLoaderRoute: typeof DashboardEventsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/auth/reset-password': {
      id: '/auth/reset-password'
      path: '/auth/reset-password'
      fullPath: '/auth/reset-password'
      preLoaderRoute: typeof AuthResetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/forgot-password': {
      id: '/auth/forgot-password'
      path: '/auth/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/projects_/$projectId/settings': {
      id: '/dashboard/projects_/$projectId/settings'
      path: '/projects/$projectId/settings'
      fullPath: '/dashboard/projects/$projectId/settings'
      preLoaderRoute: typeof DashboardProjectsProjectIdSettingsRouteImport
      parentRoute: typeof DashboardRoute
    }
  }
}

interface DashboardRouteChildren {
  DashboardEventsRoute: typeof DashboardEventsRoute
  DashboardExceptionsRoute: typeof DashboardExceptionsRoute
  DashboardIntegrationsRoute: typeof DashboardIntegrationsRoute
  DashboardIssuesRoute: typeof DashboardIssuesRoute
  DashboardProjectsRoute: typeof DashboardProjectsRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardProjectsProjectIdSettingsRoute: typeof DashboardProjectsProjectIdSettingsRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardEventsRoute: DashboardEventsRoute,
  DashboardExceptionsRoute: DashboardExceptionsRoute,
  DashboardIntegrationsRoute: DashboardIntegrationsRoute,
  DashboardIssuesRoute: DashboardIssuesRoute,
  DashboardProjectsRoute: DashboardProjectsRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardProjectsProjectIdSettingsRoute:
    DashboardProjectsProjectIdSettingsRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRouteWithChildren,
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthResetPasswordRoute: AuthResetPasswordRoute,
  SettingsAccountRoute: SettingsAccountRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
